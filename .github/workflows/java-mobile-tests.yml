name: Java Mobile Automation Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to test'
        required: true
        default: 'ios'
        type: choice
        options:
        - ios
        - android
        - both
      environment:
        description: 'Environment to test against'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod
      tags:
        description: 'Cucumber tags to run'
        required: false
        default: '@smoke'

jobs:
  test-preparation:
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.set-platforms.outputs.platforms }}
    steps:
      - name: Set platforms to test
        id: set-platforms
        run: |
          if [ "${{ github.event.inputs.platform }}" = "both" ] || [ "${{ github.event.inputs.platform }}" = "" ]; then
            echo "platforms=[\"ios\", \"android\"]" >> $GITHUB_OUTPUT
          else
            echo "platforms=[\"${{ github.event.inputs.platform || 'ios' }}\"]" >> $GITHUB_OUTPUT
          fi

  mobile-tests:
    needs: test-preparation
    runs-on: ${{ matrix.platform == 'ios' && 'macos-latest' || 'ubuntu-latest' }}
    strategy:
      matrix:
        platform: ${{ fromJson(needs.test-preparation.outputs.platforms) }}
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Node.js (for Appium)
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Appium
      run: |
        npm install -g appium@2.0.0
        appium driver install xcuitest
        appium driver install uiautomator2

    - name: Set up iOS Simulator (iOS only)
      if: matrix.platform == 'ios'
      run: |
        # List available simulators
        xcrun simctl list devices
        # Boot iOS simulator
        xcrun simctl boot "iPhone 13" || echo "Simulator already booted"

    - name: Set up Android SDK (Android only)
      if: matrix.platform == 'android'
      uses: android-actions/setup-android@v2
      with:
        api-level: 30
        target: google_apis

    - name: Create Android Virtual Device (Android only)
      if: matrix.platform == 'android'
      run: |
        echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-30;google_apis;x86_64"
        echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64"
        $ANDROID_HOME/emulator/emulator -avd test -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim &

    - name: Wait for emulator (Android only)
      if: matrix.platform == 'android'
      run: |
        # Wait for emulator to be ready
        timeout 300 bash -c 'until adb shell getprop sys.boot_completed | grep -q 1; do sleep 5; done'

    - name: Start Appium Server
      run: |
        appium server --port 4723 --log-level info &
        # Wait for Appium server to start
        timeout 30 bash -c 'until curl -f http://localhost:4723/wd/hub/status; do sleep 2; done'

    - name: Run Maven Tests
      env:
        PLATFORM: ${{ matrix.platform }}
        ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}
        CUCUMBER_TAGS: ${{ github.event.inputs.tags || '@smoke' }}
      run: |
        mvn clean test \
          -Dplatform.name=${{ matrix.platform }} \
          -Denvironment=${{ env.ENVIRONMENT }} \
          -Dcucumber.filter.tags="${{ env.CUCUMBER_TAGS }}" \
          -Dtest.parallel=false \
          -Dscreenshot.on.failure=true

    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.platform }}
        path: |
          target/cucumber-reports/
          target/screenshots/
          target/logs/
        retention-days: 7

    - name: Upload Extent Reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: extent-reports-${{ matrix.platform }}
        path: target/reports/
        retention-days: 7

    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Mobile Tests - ${{ matrix.platform }}
        path: 'target/cucumber-reports/cucumber.xml'
        reporter: java-junit

  notification:
    needs: mobile-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Send Slack notification
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ needs.mobile-tests.result }}
        channel: '#qa-automation'
        text: |
          Mobile automation tests completed
          Platform(s): ${{ join(fromJson(needs.test-preparation.outputs.platforms), ', ') }}
          Environment: ${{ github.event.inputs.environment || 'dev' }}
          Result: ${{ needs.mobile-tests.result }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}